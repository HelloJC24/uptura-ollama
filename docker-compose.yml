version: '3.8'

services:
  # Flask RAG API Application
  flask-app:
    build: .
    container_name: flask-rag-api
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - OLLAMA_HOST=http://72.60.43.106:11434
      - OLLAMA_MODEL=phi3:mini
      - REDIS_HOST=bngcpython-aiknow-myaa28
      - REDIS_PORT=6379
      - REDIS_PASSWORD=987654321
      - TOP_K=5
      - MIN_SIMILARITY=0.25
      - ENABLE_STREAMING=True
      - LOG_LEVEL=INFO
    ports:
      - "5000:5000"  # Expose Flask directly for debugging
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NGINX Reverse Proxy with Streaming Support
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"      # Main HTTP port
      - "443:443"    # HTTPS port (if SSL configured)
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - flask-app
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (if you want to run it locally instead of external)
  # redis:
  #   image: redis:alpine
  #   container_name: redis-cache
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --requirepass 987654321
  #   networks:
  #     - app-network
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  logs:
    driver: local